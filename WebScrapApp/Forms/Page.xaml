<Window x:Class="WebScrapApp.Forms.Page"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WebScrapApp.Forms"
        xmlns:core="clr-namespace:WebScrapApp.Core"
        xmlns:coreForm="clr-namespace:WebScrapApp.Core.Form"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" 
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
        WindowStartupLocation="CenterScreen"
        mc:Ignorable="d"
        Title="Page" 
        MinHeight="710" 
        MinWidth="1100">

    <Window.Resources>
        <ResourceDictionary>

            <DataTemplate DataType="{x:Type core:SDialogDelete}">
                <StackPanel Margin="16" DataContext="{Binding}" Width="300">
                    <TextBlock Text="{Binding Header}" FontSize="18" />
                    <TextBlock Text="{Binding Message}" FontSize="14" Margin="0,10,10,10" TextWrapping="Wrap"/>
                    <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                        <Button Margin="0,8,8,0"
                                Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}"
                                Content="Да"
                                IsDefault="True"                                
                                Style="{StaticResource MaterialDesignFlatButton}">
                            <Button.CommandParameter>
                                <system:Boolean>True</system:Boolean>
                            </Button.CommandParameter>
                        </Button>
                        <Button Margin="0,8,8,0"
                                Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}"
                                Content="Нет"
                                IsCancel="True"
                                Style="{StaticResource MaterialDesignFlatButton}">
                            <Button.CommandParameter>
                                <system:Boolean>False</system:Boolean>
                            </Button.CommandParameter>
                        </Button>
                    </StackPanel>
                </StackPanel>
            </DataTemplate>
            
        </ResourceDictionary>
    </Window.Resources>
    
    <materialDesign:DialogHost Identifier="DialogHostPage" 
                               DialogTheme="Inherit"                               
                               CloseOnClickAway="True">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>
            <materialDesign:ColorZone Padding="16" 
                                      materialDesign:ElevationAssist.Elevation="Dp0"
                                      DockPanel.Dock="Top"
                                      Background="{DynamicResource PrimaryHueLightBrush}">
                <TextBlock Grid.Column="1"
                           HorizontalAlignment="Left"
                           VerticalAlignment="Center"                                                                  
                           FontSize="22"
                           Text="Страница" 
                           Foreground="{DynamicResource PrimaryHueDarkBrush}"/>
            </materialDesign:ColorZone>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="400*" />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="700*" />
                </Grid.ColumnDefinitions>
                <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <Grid Margin="10" MinWidth="300">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <StackPanel Orientation="Vertical">
                            <TextBlock Text="Наименование" Margin="10" />
                            <TextBox Name="TextBoxName">
                                <TextBox.Resources>
                                    <coreForm:SBindingProxy x:Key="ProxyCheckBoxIsEditForm" Data="{Binding ElementName=CheckBoxIsEditForm, Path=IsChecked}"/>
                                    <coreForm:SBindingProxy x:Key="ProxyTextBoxProjectName" Data="{Binding ElementName=TextBoxProjectName, Path=Text}"/>
                                </TextBox.Resources>
                                <TextBox.Text>
                                    <Binding Path="Name" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <coreForm:SValidationRulePageName ValidatesOnTargetUpdated="True">
                                                <coreForm:SValidationRulePageName.CustomProperties>
                                                    <coreForm:SControlCustomProperties IsEditForm="{Binding Data, Source={StaticResource ProxyCheckBoxIsEditForm}}" 
                                                                                       Project="{Binding Data, Source={StaticResource ProxyTextBoxProjectName}}"/>
                                                </coreForm:SValidationRulePageName.CustomProperties>
                                            </coreForm:SValidationRulePageName>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            <TextBlock Text="Описание" Margin="10,20,10,10" />
                            <TextBox Name="TextBoxDescription" 
                                 Text="{Binding Description}" 
                                 TextWrapping="Wrap"
                                 VerticalScrollBarVisibility="Auto" 
                                 Height="80"/>
                            <TextBlock Text="Адрес" Margin="10,20,10,10" />
                            <TextBox Name="TextBoxUrl"  
                                 TextWrapping="Wrap"
                                 VerticalScrollBarVisibility="Auto" 
                                 Height="45">
                                <TextBox.Text>
                                    <Binding Path="Url" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <coreForm:SValidationRulePageUrl ValidatesOnTargetUpdated="True" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            <StackPanel>
                                <StackPanel>
                                    <TextBlock Text="Прокрутка" Margin="10,20,10,10"/>
                                    <RadioButton x:Name="RadioScrollTypeDynamic"
                                         IsChecked="{Binding Path=ScrollType, Converter={StaticResource ValueConverterEnumToBool}, ConverterParameter={x:Static core:SScrollType.Dynamic}}"
                                         Content="Динамеческая"/>
                                    <RadioButton x:Name="RadioScrollTypeDynamicLink" 
                                         IsChecked="{Binding Path=ScrollType, Converter={StaticResource ValueConverterEnumToBool}, ConverterParameter={x:Static core:SScrollType.DynamicLink}}"
                                         Content="По кнопке"/>
                                    <RadioButton x:Name="RadioScrollTypeNumericPages" 
                                         IsChecked="{Binding Path=ScrollType, Converter={StaticResource ValueConverterEnumToBool}, ConverterParameter={x:Static core:SScrollType.NumericPages}}"
                                         Content="Страницы"/>
                                </StackPanel>
                                <TextBlock Text="Тег" 
                                   Margin="10,20,10,10"
                                   Visibility="{Binding ElementName=RadioScrollTypeDynamic, Path=IsChecked, Converter={StaticResource ValueConverterBoolInvertorToVisibility}}" />
                                <ComboBox x:Name="ComboBoxScrollTag"
                                  ItemsSource="{Binding Source={StaticResource TagEnum}}"
                                  SelectedItem="{Binding Path=ScrollTag}"                                                          
                                  Text="{Binding ScrollTag}"                                   
                                  Visibility="{Binding ElementName=RadioScrollTypeDynamic, Path=IsChecked, Converter={StaticResource ValueConverterBoolInvertorToVisibility}}" />
                                <TextBlock Text="Класс" 
                                   Margin="10,20,10,10"
                                   Visibility="{Binding ElementName=RadioScrollTypeDynamic, Path=IsChecked, Converter={StaticResource ValueConverterBoolInvertorToVisibility}}" />
                                <TextBox Name="TextBoxClass"         
                                 Visibility="{Binding ElementName=RadioScrollTypeDynamic, Path=IsChecked, Converter={StaticResource ValueConverterBoolInvertorToVisibility}}">
                                    <TextBox.Text>
                                        <Binding Path="ScrollClass" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <coreForm:SValidationRulePageScrollClass ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                </ScrollViewer>
                <GridSplitter Grid.Column="1"                                
                              Width="2" 
                              Margin="0,10,0,10"
                              HorizontalAlignment="Stretch" />
                <Grid Grid.Column="2" Margin="10">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <StackPanel Orientation="Horizontal">
                        <Button x:Name="ButtonViewCreate"
                                Margin="10,10,0,0"
                                HorizontalContentAlignment="Left"                  
                                Background="{DynamicResource PrimaryHueLightBrush}"
                                BorderThickness="0"                                    
                                Foreground="{DynamicResource PrimaryHueDarkBrush}"
                                Click="Button_Click">
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon Width="20" Height="20" VerticalAlignment="Center" Kind="FilePlusOutline"/>
                                <TextBlock Margin="5" VerticalAlignment="Center" FontSize="12" Text="Добавить объект" />
                            </StackPanel>
                        </Button>
                        <Button x:Name="ButtonViewEdit"
                                Margin="10,10,0,0"
                                HorizontalContentAlignment="Left"                  
                                Background="{DynamicResource PrimaryHueLightBrush}"
                                BorderThickness="0"                                    
                                Foreground="{DynamicResource PrimaryHueDarkBrush}"
                                Click="Button_Click"                                
                                IsEnabled="{Binding ElementName=ListViewViews, Path=Items.IsEmpty, Converter={StaticResource ResourceKey=ValueConverterBoolInvertor}}">
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon Width="20" Height="20" VerticalAlignment="Center" Kind="FileEditOutline"/>
                                <TextBlock Margin="5" VerticalAlignment="Center" FontSize="12" Text="Изменить" />
                            </StackPanel>
                        </Button>
                        <Button x:Name="ButtonViewDelete"
                                Margin="10,10,0,0"
                                HorizontalContentAlignment="Left"                  
                                Background="{DynamicResource PrimaryHueLightBrush}"
                                BorderThickness="0"                                    
                                Foreground="{DynamicResource PrimaryHueDarkBrush}"
                                Click="Button_Click"                                
                                IsEnabled="{Binding ElementName=ListViewViews, Path=Items.IsEmpty, Converter={StaticResource ResourceKey=ValueConverterBoolInvertor}}">
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon Width="20" Height="20" VerticalAlignment="Center" Kind="FileRemoveOutline"/>
                                <TextBlock Margin="5" VerticalAlignment="Center" FontSize="12" Text="Удалить" />
                            </StackPanel>
                        </Button>
                        <Button x:Name="ButtonViewCopy"
                                Margin="10,10,0,0"
                                HorizontalContentAlignment="Left"                  
                                Background="{DynamicResource PrimaryHueLightBrush}"
                                BorderThickness="0"                                    
                                Foreground="{DynamicResource PrimaryHueDarkBrush}"
                                Click="Button_Click"
                                IsEnabled="{Binding ElementName=ListViewViews, Path=Items.IsEmpty, Converter={StaticResource ResourceKey=ValueConverterBoolInvertor}}">
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon Width="20" Height="20" VerticalAlignment="Center" Kind="FileMultipleOutline"/>
                                <TextBlock Margin="5" VerticalAlignment="Center" FontSize="12" Text="Копировать" />
                            </StackPanel>
                        </Button>
                    </StackPanel>
                    <ListView Name="ListViewViews" 
                              Grid.Row="1"
                              SelectionChanged="ListViewViews_SelectionChanged">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn DisplayMemberBinding="{Binding Name}" Header="Наименование"/>
                                <GridViewColumn DisplayMemberBinding="{Binding Description}" Header="Описание"/>
                                <GridViewColumn DisplayMemberBinding="{Binding Tag}" Header="Тег"/>
                                <GridViewColumn DisplayMemberBinding="{Binding Class}" Header="Класс"/>
                            </GridView>
                        </ListView.View>
                    </ListView>
                </Grid>
            </Grid>
            <materialDesign:ColorZone Grid.Row="2"
                                      Padding="8" 
                                      materialDesign:ElevationAssist.Elevation="Dp0"
                                      DockPanel.Dock="Bottom"
                                      Background="{DynamicResource PrimaryHueLightBrush}">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button x:Name="ButtonOK"
                            Margin="8"
                            Content="ОК"
                            IsDefault="True"
                            Style="{StaticResource MaterialDesignFlatButton}" 
                            Foreground="{DynamicResource PrimaryHueDarkBrush}"
                            Click="Button_Click">
                        <Button.IsEnabled>
                            <MultiBinding Converter="{StaticResource MultiValueConverterPageOKToBool}">
                                <Binding ElementName="TextBoxName" Path="Text" />
                                <Binding ElementName="TextBoxUrl" Path="Text" />
                                <Binding ElementName="TextBoxClass" Path="Text" />
                                <Binding ElementName="RadioScrollTypeDynamic" Path="IsChecked" />
                                <Binding ElementName="TextBoxProjectName" Path="Text" />
                                <Binding ElementName="CheckBoxIsEditForm" Path="IsChecked" />
                            </MultiBinding>
                        </Button.IsEnabled>
                    </Button>
                    <Button x:Name="ButtonCancel" 
                            Margin="8"                                
                            Content="Отмена"
                            Style="{StaticResource MaterialDesignFlatButton}" 
                            Foreground="{DynamicResource PrimaryHueDarkBrush}"
                            Click="Button_Click" />
                </StackPanel>
            </materialDesign:ColorZone>
            <CheckBox Name="CheckBoxIsEditForm" Visibility="Hidden" />
            <TextBox Name="TextBoxProjectName" Visibility="Hidden" />
        </Grid>
    </materialDesign:DialogHost>
</Window>
